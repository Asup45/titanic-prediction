#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script pour d√©marrer l'API FastAPI localement.
Ce script lance l'API FastAPI avec Uvicorn sur le port 8000.
"""

import os
import subprocess
import sys
import time
import threading

def run_uvicorn():
    """
    Lance l'API FastAPI avec Uvicorn.
    """
    print("üöÄ D√©marrage de l'API FastAPI...")
    subprocess.run([
        sys.executable, "-m", "uvicorn", "api.main:app", 
        "--host", "0.0.0.0", "--port", "8000", "--reload"
    ])

def check_requirements():
    """
    V√©rifie que les d√©pendances requises sont install√©es.
    """
    try:
        import fastapi
        import uvicorn
        import joblib
        import pandas
        import sklearn
        import psycopg2
        return True
    except ImportError as e:
        print(f"‚ùå Erreur: D√©pendance manquante: {e}")
        print("üí° Veuillez installer les d√©pendances requises avec: pip install -r requirements.txt")
        return False

def main():
    """
    Fonction principale.
    """
    # En-t√™te
    print("=" * 50)
    print("      TITANIC PREDICTION API - D√âMARRAGE LOCAL      ")
    print("=" * 50)
    
    # V√©rifier les d√©pendances
    if not check_requirements():
        return
    
    # V√©rifier si le mod√®le existe
    model_path = os.path.abspath(os.path.join(os.path.dirname(__file__), "model", "titanic_model.joblib"))
    if not os.path.exists(model_path):
        print(f"‚ùå Erreur: Mod√®le non trouv√©: {model_path}")
        print("üí° Veuillez ex√©cuter le script d'entra√Ænement avec: python scripts/training/train.py")
        return
    
    # D√©marrer l'API
    try:
        run_uvicorn()
    except KeyboardInterrupt:
        print("\nüëã Arr√™t de l'API...")
    except Exception as e:
        print(f"‚ùå Erreur lors du d√©marrage de l'API: {e}")

if __name__ == "__main__":
    main() 